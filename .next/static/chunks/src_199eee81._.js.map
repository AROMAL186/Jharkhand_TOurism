{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;;;AAfA;;;;;;AAiBA,MAAM,OAAO,iKAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,iKAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;GArBM;;QAGiC,iKAAA,CAAA,iBAAc;;;AAwBrD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,KAAK,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAErB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,oIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,mKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;;QAfkE;;;;QAAA;;;;AAgBlE,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;;QAjBmC;;;;QAAA;;;;AAkBnC,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/personalized-itinerary.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Generates personalized travel itineraries for tourists in Jharkhand based on their interests, preferences, and available time.\n *\n * - generatePersonalizedItinerary - A function that generates a personalized travel itinerary.\n * - PersonalizedItineraryInput - The input type for the generatePersonalizedItinerary function.\n * - PersonalizedItineraryOutput - The return type for the generatePersonalizedItinerary function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst PersonalizedItineraryInputSchema = z.object({\n  interests: z\n    .string()\n    .describe('The interests of the tourist, such as eco-tourism, cultural sites, historical landmarks, or adventure activities.'),\n  preferences: z\n    .string()\n    .describe('The preferences of the tourist, such as budget, accommodation type, food preferences, and travel style.'),\n  availableTime: z\n    .string()\n    .describe('The available time the tourist has for the trip, specified in days or hours.'),\n  locationPreferences: z.string().describe('Preferred locations or regions within Jharkhand, if any.'),\n  pace: z.string().describe('Desired pace of the itinerary (e.g., relaxed, moderate, packed).'),\n});\nexport type PersonalizedItineraryInput = z.infer<\n  typeof PersonalizedItineraryInputSchema\n>;\n\nconst ItineraryActivitySchema = z.object({\n    time: z.string().describe(\"The time of day for the activity (e.g., Morning, Late Morning, Afternoon, Evening).\"),\n    location: z.string().describe(\"The name of the location or destination for the activity.\"),\n    description: z.string().describe(\"A short description of the activity to be performed.\")\n});\n\nconst ItineraryDaySchema = z.object({\n    day: z.number().describe(\"The day number of the itinerary (e.g., 1, 2, 3).\"),\n    title: z.string().describe(\"A catchy title for the day's plan.\"),\n    activities: z.array(ItineraryActivitySchema).describe(\"A list of activities for the day.\")\n});\n\n\nconst PersonalizedItineraryOutputSchema = z.object({\n  itinerary: z.array(ItineraryDaySchema).describe(\"A day-by-day, detailed travel itinerary for the tourist.\"),\n  overallTheme: z.string().describe('A short summary of the overall theme of the itinerary.'),\n  estimatedCost: z\n    .string()\n    .describe('An estimated cost for the entire itinerary, including transportation, accommodation, and activities.'),\n});\nexport type PersonalizedItineraryOutput = z.infer<\n  typeof PersonalizedItineraryOutputSchema\n>;\n\nexport async function generatePersonalizedItinerary(\n  input: PersonalizedItineraryInput\n): Promise<PersonalizedItineraryOutput> {\n  return personalizedItineraryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'personalizedItineraryPrompt',\n  input: {schema: PersonalizedItineraryInputSchema},\n  output: {schema: PersonalizedItineraryOutputSchema},\n  prompt: `You are an expert travel planner specializing in Jharkhand tourism.\n\n  Based on the tourist's interests, preferences, and available time, create a personalized travel itinerary for exploring Jharkhand's eco and cultural tourism spots.\n\n  Interests: {{{interests}}}\n  Preferences: {{{preferences}}}\n  Available Time: {{{availableTime}}}\n  Location Preferences: {{{locationPreferences}}}\n  Pace: {{{pace}}}\n\n  Provide a detailed, day-by-day itinerary. For each day, provide a title and a list of activities. Each activity should have a time (like Morning, Afternoon), a location, and a description.\n  Also, provide a short summary of the overall theme of the itinerary and an estimated cost for the entire trip.\n  If no location preferences provided, focus on the most popular tourism locations.`,\n});\n\nconst personalizedItineraryFlow = ai.defineFlow(\n  {\n    name: 'personalizedItineraryFlow',\n    inputSchema: PersonalizedItineraryInputSchema,\n    outputSchema: PersonalizedItineraryOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n\n    \n"],"names":[],"mappings":";;;;;;IAuDsB,gCAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,6LAAC,qKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/itinerary-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Loader2, Wand2, DollarSign, Lightbulb, Leaf, Heart, Calendar as CalendarIcon, Users, Mountain, Camera, Sparkles, Utensils, MapPin, Building, Sprout, Handshake, Clock, Flag } from 'lucide-react';\nimport { generatePersonalizedItinerary, PersonalizedItineraryOutput } from '@/ai/flows/personalized-itinerary';\nimport { Slider } from '@/components/ui/slider';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { cn } from '@/lib/utils';\nimport { format, addDays, differenceInDays } from 'date-fns';\n\nconst interests = [\n    { id: 'wildlife', label: 'Wildlife & Nature', icon: Sprout },\n    { id: 'heritage', label: 'Cultural Heritage', icon: Building },\n    { id: 'tribal', label: 'Tribal Experiences', icon: Handshake },\n    { id: 'adventure', label: 'Adventure Sports', icon: Mountain },\n    { id: 'photography', label: 'Photography', icon: Camera },\n    { id: 'handicrafts', label: 'Handicrafts & Art', icon: Sparkles },\n    { id: 'spiritual', label: 'Spiritual Sites', icon: Heart },\n    { id: 'cuisine', label: 'Local Cuisine', icon: Utensils },\n    { id: 'eco-tourism', label: 'Eco-Tourism', icon: Leaf },\n    { id: 'historical', label: 'Historical Sites', icon: MapPin },\n];\n\nconst travelPreferences = [\n    { id: 'eco-friendly', label: 'Eco Friendly' },\n    { id: 'cultural', label: 'Cultural' },\n    { id: 'adventure', label: 'Adventure' },\n    { id: 'luxury', label: 'Luxury' },\n    { id: 'budget', label: 'Budget' },\n]\n\nconst formSchema = z.object({\n  dateRange: z.object({\n    from: z.date({\n      required_error: \"A start date is required.\",\n    }),\n    to: z.date({\n      required_error: \"An end date is required.\",\n    }),\n  }),\n  budget: z.number().min(1000).max(100000),\n  groupSize: z.number().min(1).max(20),\n  interests: z.array(z.string()).refine(value => value.some(item => item), {\n      message: \"You have to select at least one interest.\"\n  }),\n  preferences: z.array(z.string()).refine(value => value.some(item => item), {\n      message: \"You have to select at least one preference.\"\n  }),\n  pace: z.enum(['relaxed', 'moderate', 'packed']), // Keep pace from previous version\n});\n\nconst ItineraryTimeline = ({ itinerary }: { itinerary: PersonalizedItineraryOutput['itinerary'] }) => {\n  if (!itinerary || itinerary.length === 0) return null;\n\n  return (\n    <div className=\"space-y-8\">\n      {itinerary.map((day) => (\n        <div key={day.day}>\n          <h3 className=\"text-2xl font-bold font-headline text-primary mb-4 flex items-center gap-2\">\n            <CalendarIcon className=\"h-6 w-6\" />\n            Day {day.day}: {day.title}\n          </h3>\n          <div className=\"border-l-2 border-primary/20 pl-6 space-y-6\">\n            {day.activities.map((activity, index) => (\n              <div key={index} className=\"relative\">\n                <div className=\"absolute -left-[34px] top-1.5 h-4 w-4 rounded-full bg-primary/20 border-4 border-background\" />\n                <p className=\"font-semibold text-green-600 flex items-center gap-2\"><Clock className=\"h-4 w-4\" />{activity.time}</p>\n                <p className=\"font-semibold text-foreground mt-1 flex items-center gap-2\"><MapPin className=\"h-4 w-4 text-muted-foreground\" />{activity.location}</p>\n                <p className=\"text-muted-foreground mt-1 ml-6 flex items-start gap-2\"><Flag className=\"h-4 w-4 mt-1 flex-shrink-0\" />{activity.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\nexport function ItineraryForm() {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<PersonalizedItineraryOutput | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      dateRange: {\n        from: new Date(),\n        to: addDays(new Date(), 3),\n      },\n      budget: 15000,\n      groupSize: 2,\n      interests: [\"eco-tourism\", \"heritage\"],\n      preferences: [\"budget\", \"cultural\"],\n      pace: 'moderate',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setLoading(true);\n    setResult(null);\n    setError(null);\n\n    const duration = differenceInDays(values.dateRange.to, values.dateRange.from) + 1;\n\n    const submissionData = {\n        interests: values.interests.join(', '),\n        preferences: values.preferences.join(', '),\n        availableTime: `${duration} days`,\n        locationPreferences: '', // This can be added back if needed\n        pace: values.pace,\n    }\n\n    try {\n      const response = await generatePersonalizedItinerary(submissionData);\n      setResult(response);\n    } catch (e) {\n      setError('Failed to generate itinerary. Please try again.');\n      console.error(e);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <Card className=\"mt-8\">\n        <CardContent className=\"p-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n                 <FormField\n                    control={form.control}\n                    name=\"dateRange\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-col\">\n                        <FormLabel className=\"flex items-center gap-2\"><CalendarIcon /> Travel Dates</FormLabel>\n                        <Popover>\n                          <PopoverTrigger asChild>\n                            <FormControl>\n                              <Button\n                                variant={\"outline\"}\n                                className={cn(\n                                  \"w-full justify-start text-left font-normal\",\n                                  !field.value.from && \"text-muted-foreground\"\n                                )}\n                              >\n                                {field.value.from ? (\n                                  field.value.to ? (\n                                    <>\n                                      {format(field.value.from, \"LLL dd, y\")} -{\" \"}\n                                      {format(field.value.to, \"LLL dd, y\")}\n                                    </>\n                                  ) : (\n                                    format(field.value.from, \"LLL dd, y\")\n                                  )\n                                ) : (\n                                  <span>Pick a date</span>\n                                )}\n                              </Button>\n                            </FormControl>\n                          </PopoverTrigger>\n                          <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                            <Calendar\n                              initialFocus\n                              mode=\"range\"\n                              defaultMonth={field.value.from}\n                              selected={field.value}\n                              onSelect={field.onChange}\n                              numberOfMonths={2}\n                            />\n                          </PopoverContent>\n                        </Popover>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                <FormField\n                    control={form.control}\n                    name=\"budget\"\n                    render={({ field }) => (\n                        <FormItem>\n                        <FormLabel className=\"flex items-center gap-2\"><DollarSign /> Budget: ₹{field.value.toLocaleString()}</FormLabel>\n                        <FormControl>\n                            <Slider\n                                value={[field.value]}\n                                onValueChange={(value) => field.onChange(value[0])}\n                                min={1000}\n                                max={100000}\n                                step={1000}\n                            />\n                        </FormControl>\n                        </FormItem>\n                    )}\n                    />\n                <FormField\n                    control={form.control}\n                    name=\"groupSize\"\n                    render={({ field }) => (\n                        <FormItem>\n                        <FormLabel className=\"flex items-center gap-2\"><Users /> Group Size: {field.value} people</FormLabel>\n                        <FormControl>\n                            <Slider\n                                value={[field.value]}\n                                onValueChange={(value) => field.onChange(value[0])}\n                                min={1}\n                                max={20}\n                                step={1}\n                            />\n                        </FormControl>\n                        </FormItem>\n                    )}\n                />\n              </div>\n\n               <FormField\n                control={form.control}\n                name=\"interests\"\n                render={() => (\n                    <FormItem>\n                        <div className=\"mb-4\">\n                            <FormLabel className=\"text-base flex items-center gap-2\"><Heart /> Your Interests *</FormLabel>\n                            <FormDescription>Select a few of your interests to help us plan the best trip for you.</FormDescription>\n                        </div>\n                        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4\">\n                        {interests.map((interest) => (\n                            <FormField\n                            key={interest.id}\n                            control={form.control}\n                            name=\"interests\"\n                            render={({ field }) => {\n                                return (\n                                <FormItem\n                                    key={interest.id}\n                                    className=\"border rounded-lg p-4 flex flex-col items-center justify-center gap-2 has-[:checked]:bg-primary/10 has-[:checked]:border-primary transition-colors cursor-pointer\"\n                                >\n                                    <FormControl>\n                                    <Checkbox\n                                        className=\"sr-only\"\n                                        checked={field.value?.includes(interest.id)}\n                                        onCheckedChange={(checked) => {\n                                        return checked\n                                            ? field.onChange([...field.value, interest.id])\n                                            : field.onChange(\n                                                field.value?.filter(\n                                                (value) => value !== interest.id\n                                                )\n                                            )\n                                        }}\n                                    />\n                                    </FormControl>\n                                    <interest.icon className=\"h-8 w-8 text-primary\" />\n                                    <FormLabel className=\"font-normal text-center cursor-pointer\">{interest.label}</FormLabel>\n                                </FormItem>\n                                )\n                            }}\n                            />\n                        ))}\n                        </div>\n                        <FormMessage />\n                    </FormItem>\n                )}\n                />\n\n\n                <FormField\n                    control={form.control}\n                    name=\"preferences\"\n                    render={() => (\n                        <FormItem>\n                        <div className=\"mb-4\">\n                            <FormLabel className=\"text-base flex items-center gap-2\"><Sparkles /> Travel Preferences</FormLabel>\n                             <FormDescription>What's your travel style?</FormDescription>\n                        </div>\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 rounded-lg border p-4\">\n                            {travelPreferences.map((item) => (\n                            <FormField\n                                key={item.id}\n                                control={form.control}\n                                name=\"preferences\"\n                                render={({ field }) => {\n                                return (\n                                    <FormItem\n                                    key={item.id}\n                                    className=\"flex flex-row items-start space-x-3 space-y-0\"\n                                    >\n                                    <FormControl>\n                                        <Checkbox\n                                        checked={field.value?.includes(item.id)}\n                                        onCheckedChange={(checked) => {\n                                            return checked\n                                            ? field.onChange([...field.value, item.id])\n                                            : field.onChange(\n                                                field.value?.filter(\n                                                    (value) => value !== item.id\n                                                )\n                                                )\n                                        }}\n                                        />\n                                    </FormControl>\n                                    <FormLabel className=\"font-normal\">\n                                        {item.label}\n                                    </FormLabel>\n                                    </FormItem>\n                                )\n                                }}\n                            />\n                            ))}\n                        </div>\n                        <FormMessage />\n                        </FormItem>\n                    )}\n                />\n\n              <Button type=\"submit\" disabled={loading} className=\"w-full\" size=\"lg\">\n                {loading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Wand2 className=\"mr-2 h-4 w-4\" />}\n                Generate My Itinerary\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n\n      {error && (\n        <Card className=\"mt-8 border-destructive\">\n            <CardHeader>\n                <CardTitle className=\"text-destructive\">Error</CardTitle>\n                <CardDescription>{error}</CardDescription>\n            </CardHeader>\n        </Card>\n      )}\n\n      {result && (\n        <div className=\"mt-8 space-y-6\">\n            <h2 className=\"text-3xl font-bold text-center font-headline\">Your Custom Itinerary</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                 <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">Overall Theme</CardTitle>\n                        <Lightbulb className=\"h-4 w-4 text-muted-foreground\"/>\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{result.overallTheme}</div>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">Estimated Cost</CardTitle>\n                        <DollarSign className=\"h-4 w-4 text-muted-foreground\"/>\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{result.estimatedCost}</div>\n                    </CardContent>\n                </Card>\n            </div>\n            <Card>\n                <CardHeader>\n                    <CardTitle>Detailed Plan</CardTitle>\n                </CardHeader>\n                <CardContent>\n                   <ItineraryTimeline itinerary={result.itinerary} />\n                </CardContent>\n            </Card>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AAxBA;;;;;;;;;;;;;;;;AA0BA,MAAM,YAAY;IACd;QAAE,IAAI;QAAY,OAAO;QAAqB,MAAM,yMAAA,CAAA,SAAM;IAAC;IAC3D;QAAE,IAAI;QAAY,OAAO;QAAqB,MAAM,6MAAA,CAAA,WAAQ;IAAC;IAC7D;QAAE,IAAI;QAAU,OAAO;QAAsB,MAAM,+MAAA,CAAA,YAAS;IAAC;IAC7D;QAAE,IAAI;QAAa,OAAO;QAAoB,MAAM,6MAAA,CAAA,WAAQ;IAAC;IAC7D;QAAE,IAAI;QAAe,OAAO;QAAe,MAAM,yMAAA,CAAA,SAAM;IAAC;IACxD;QAAE,IAAI;QAAe,OAAO;QAAqB,MAAM,6MAAA,CAAA,WAAQ;IAAC;IAChE;QAAE,IAAI;QAAa,OAAO;QAAmB,MAAM,uMAAA,CAAA,QAAK;IAAC;IACzD;QAAE,IAAI;QAAW,OAAO;QAAiB,MAAM,6MAAA,CAAA,WAAQ;IAAC;IACxD;QAAE,IAAI;QAAe,OAAO;QAAe,MAAM,qMAAA,CAAA,OAAI;IAAC;IACtD;QAAE,IAAI;QAAc,OAAO;QAAoB,MAAM,6MAAA,CAAA,SAAM;IAAC;CAC/D;AAED,MAAM,oBAAoB;IACtB;QAAE,IAAI;QAAgB,OAAO;IAAe;IAC5C;QAAE,IAAI;QAAY,OAAO;IAAW;IACpC;QAAE,IAAI;QAAa,OAAO;IAAY;IACtC;QAAE,IAAI;QAAU,OAAO;IAAS;IAChC;QAAE,IAAI;QAAU,OAAO;IAAS;CACnC;AAED,MAAM,aAAa,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,WAAW,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;QAClB,MAAM,CAAA,GAAA,uIAAA,CAAA,OAAM,AAAD,EAAE;YACX,gBAAgB;QAClB;QACA,IAAI,CAAA,GAAA,uIAAA,CAAA,OAAM,AAAD,EAAE;YACT,gBAAgB;QAClB;IACF;IACA,QAAQ,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;IACjC,WAAW,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;IACjC,WAAW,CAAA,GAAA,uIAAA,CAAA,QAAO,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,KAAK,MAAM,CAAC,CAAA,QAAS,MAAM,IAAI,CAAC,CAAA,OAAQ,OAAO;QACrE,SAAS;IACb;IACA,aAAa,CAAA,GAAA,uIAAA,CAAA,QAAO,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,KAAK,MAAM,CAAC,CAAA,QAAS,MAAM,IAAI,CAAC,CAAA,OAAQ,OAAO;QACvE,SAAS;IACb;IACA,MAAM,CAAA,GAAA,uIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAW;QAAY;KAAS;AAChD;AAEA,MAAM,oBAAoB,CAAC,EAAE,SAAS,EAA2D;IAC/F,IAAI,CAAC,aAAa,UAAU,MAAM,KAAK,GAAG,OAAO;IAEjD,qBACE,6LAAC;QAAI,WAAU;kBACZ,UAAU,GAAG,CAAC,CAAC,oBACd,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC,6MAAA,CAAA,WAAY;gCAAC,WAAU;;;;;;4BAAY;4BAC/B,IAAI,GAAG;4BAAC;4BAAG,IAAI,KAAK;;;;;;;kCAE3B,6LAAC;wBAAI,WAAU;kCACZ,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,UAAU,sBAC7B,6LAAC;gCAAgB,WAAU;;kDACzB,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAE,WAAU;;0DAAuD,6LAAC,uMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;4CAAa,SAAS,IAAI;;;;;;;kDAC/G,6LAAC;wCAAE,WAAU;;0DAA6D,6LAAC,6MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAmC,SAAS,QAAQ;;;;;;;kDAChJ,6LAAC;wCAAE,WAAU;;0DAAyD,6LAAC,qMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAgC,SAAS,WAAW;;;;;;;;+BAJlI;;;;;;;;;;;eAPN,IAAI,GAAG;;;;;;;;;;AAmBzB;KAzBM;AA4BC,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsC;IACzE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA8B;QAC/C,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,WAAW;gBACT,MAAM,IAAI;gBACV,IAAI,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD,EAAE,IAAI,QAAQ;YAC1B;YACA,QAAQ;YACR,WAAW;YACX,WAAW;gBAAC;gBAAe;aAAW;YACtC,aAAa;gBAAC;gBAAU;aAAW;YACnC,MAAM;QACR;IACF;IAEA,eAAe,SAAS,MAAkC;QACxD,WAAW;QACX,UAAU;QACV,SAAS;QAET,MAAM,WAAW,CAAA,GAAA,mJAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,SAAS,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,IAAI,IAAI;QAEhF,MAAM,iBAAiB;YACnB,WAAW,OAAO,SAAS,CAAC,IAAI,CAAC;YACjC,aAAa,OAAO,WAAW,CAAC,IAAI,CAAC;YACrC,eAAe,GAAG,SAAS,KAAK,CAAC;YACjC,qBAAqB;YACrB,MAAM,OAAO,IAAI;QACrB;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,6JAAA,CAAA,gCAA6B,AAAD,EAAE;YACrD,UAAU;QACZ,EAAE,OAAO,GAAG;YACV,SAAS;YACT,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE;;0BACE,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;0BACd,cAAA,6LAAC,mIAAA,CAAA,cAAW;oBAAC,WAAU;8BACrB,cAAA,6LAAC,mIAAA,CAAA,OAAI;wBAAE,GAAG,IAAI;kCACZ,cAAA,6LAAC;4BAAK,UAAU,KAAK,YAAY,CAAC;4BAAW,WAAU;;8CAErD,6LAAC;oCAAI,WAAU;;sDACZ,6LAAC,mIAAA,CAAA,YAAS;4CACP,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;oDAAC,WAAU;;sEAClB,6LAAC,mIAAA,CAAA,YAAS;4DAAC,WAAU;;8EAA0B,6LAAC,6MAAA,CAAA,WAAY;;;;;gEAAG;;;;;;;sEAC/D,6LAAC,sIAAA,CAAA,UAAO;;8EACN,6LAAC,sIAAA,CAAA,iBAAc;oEAAC,OAAO;8EACrB,cAAA,6LAAC,mIAAA,CAAA,cAAW;kFACV,cAAA,6LAAC,qIAAA,CAAA,SAAM;4EACL,SAAS;4EACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8CACA,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI;sFAGtB,MAAM,KAAK,CAAC,IAAI,GACf,MAAM,KAAK,CAAC,EAAE,iBACZ;;oFACG,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,KAAK,CAAC,IAAI,EAAE;oFAAa;oFAAG;oFACzC,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,KAAK,CAAC,EAAE,EAAE;;+FAG1B,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,KAAK,CAAC,IAAI,EAAE,6BAG3B,6LAAC;0FAAK;;;;;;;;;;;;;;;;;;;;;8EAKd,6LAAC,sIAAA,CAAA,iBAAc;oEAAC,WAAU;oEAAa,OAAM;8EAC3C,cAAA,6LAAC,uIAAA,CAAA,WAAQ;wEACP,YAAY;wEACZ,MAAK;wEACL,cAAc,MAAM,KAAK,CAAC,IAAI;wEAC9B,UAAU,MAAM,KAAK;wEACrB,UAAU,MAAM,QAAQ;wEACxB,gBAAgB;;;;;;;;;;;;;;;;;sEAItB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAIpB,6LAAC,mIAAA,CAAA,YAAS;4CACN,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;sEACT,6LAAC,mIAAA,CAAA,YAAS;4DAAC,WAAU;;8EAA0B,6LAAC,qNAAA,CAAA,aAAU;;;;;gEAAG;gEAAW,MAAM,KAAK,CAAC,cAAc;;;;;;;sEAClG,6LAAC,mIAAA,CAAA,cAAW;sEACR,cAAA,6LAAC,qIAAA,CAAA,SAAM;gEACH,OAAO;oEAAC,MAAM,KAAK;iEAAC;gEACpB,eAAe,CAAC,QAAU,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE;gEACjD,KAAK;gEACL,KAAK;gEACL,MAAM;;;;;;;;;;;;;;;;;;;;;;sDAMtB,6LAAC,mIAAA,CAAA,YAAS;4CACN,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;sEACT,6LAAC,mIAAA,CAAA,YAAS;4DAAC,WAAU;;8EAA0B,6LAAC,uMAAA,CAAA,QAAK;;;;;gEAAG;gEAAc,MAAM,KAAK;gEAAC;;;;;;;sEAClF,6LAAC,mIAAA,CAAA,cAAW;sEACR,cAAA,6LAAC,qIAAA,CAAA,SAAM;gEACH,OAAO;oEAAC,MAAM,KAAK;iEAAC;gEACpB,eAAe,CAAC,QAAU,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE;gEACjD,KAAK;gEACL,KAAK;gEACL,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQvB,6LAAC,mIAAA,CAAA,YAAS;oCACT,SAAS,KAAK,OAAO;oCACrB,MAAK;oCACL,QAAQ,kBACJ,6LAAC,mIAAA,CAAA,WAAQ;;8DACL,6LAAC;oDAAI,WAAU;;sEACX,6LAAC,mIAAA,CAAA,YAAS;4DAAC,WAAU;;8EAAoC,6LAAC,uMAAA,CAAA,QAAK;;;;;gEAAG;;;;;;;sEAClE,6LAAC,mIAAA,CAAA,kBAAe;sEAAC;;;;;;;;;;;;8DAErB,6LAAC;oDAAI,WAAU;8DACd,UAAU,GAAG,CAAC,CAAC,yBACZ,6LAAC,mIAAA,CAAA,YAAS;4DAEV,SAAS,KAAK,OAAO;4DACrB,MAAK;4DACL,QAAQ,CAAC,EAAE,KAAK,EAAE;gEACd,qBACA,6LAAC,mIAAA,CAAA,WAAQ;oEAEL,WAAU;;sFAEV,6LAAC,mIAAA,CAAA,cAAW;sFACZ,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gFACL,WAAU;gFACV,SAAS,MAAM,KAAK,EAAE,SAAS,SAAS,EAAE;gFAC1C,iBAAiB,CAAC;oFAClB,OAAO,UACD,MAAM,QAAQ,CAAC;2FAAI,MAAM,KAAK;wFAAE,SAAS,EAAE;qFAAC,IAC5C,MAAM,QAAQ,CACZ,MAAM,KAAK,EAAE,OACb,CAAC,QAAU,UAAU,SAAS,EAAE;gFAGxC;;;;;;;;;;;sFAGJ,6LAAC,SAAS,IAAI;4EAAC,WAAU;;;;;;sFACzB,6LAAC,mIAAA,CAAA,YAAS;4EAAC,WAAU;sFAA0C,SAAS,KAAK;;;;;;;mEAnBxE,SAAS,EAAE;;;;;4DAsBxB;2DA5BK,SAAS,EAAE;;;;;;;;;;8DAgCpB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8CAMpB,6LAAC,mIAAA,CAAA,YAAS;oCACN,SAAS,KAAK,OAAO;oCACrB,MAAK;oCACL,QAAQ,kBACJ,6LAAC,mIAAA,CAAA,WAAQ;;8DACT,6LAAC;oDAAI,WAAU;;sEACX,6LAAC,mIAAA,CAAA,YAAS;4DAAC,WAAU;;8EAAoC,6LAAC,6MAAA,CAAA,WAAQ;;;;;gEAAG;;;;;;;sEACpE,6LAAC,mIAAA,CAAA,kBAAe;sEAAC;;;;;;;;;;;;8DAEtB,6LAAC;oDAAI,WAAU;8DACV,kBAAkB,GAAG,CAAC,CAAC,qBACxB,6LAAC,mIAAA,CAAA,YAAS;4DAEN,SAAS,KAAK,OAAO;4DACrB,MAAK;4DACL,QAAQ,CAAC,EAAE,KAAK,EAAE;gEAClB,qBACI,6LAAC,mIAAA,CAAA,WAAQ;oEAET,WAAU;;sFAEV,6LAAC,mIAAA,CAAA,cAAW;sFACR,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gFACT,SAAS,MAAM,KAAK,EAAE,SAAS,KAAK,EAAE;gFACtC,iBAAiB,CAAC;oFACd,OAAO,UACL,MAAM,QAAQ,CAAC;2FAAI,MAAM,KAAK;wFAAE,KAAK,EAAE;qFAAC,IACxC,MAAM,QAAQ,CACZ,MAAM,KAAK,EAAE,OACT,CAAC,QAAU,UAAU,KAAK,EAAE;gFAGxC;;;;;;;;;;;sFAGJ,6LAAC,mIAAA,CAAA,YAAS;4EAAC,WAAU;sFAChB,KAAK,KAAK;;;;;;;mEAlBV,KAAK,EAAE;;;;;4DAsBhB;2DA5BK,KAAK,EAAE;;;;;;;;;;8DAgCpB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8CAKtB,6LAAC,qIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,UAAU;oCAAS,WAAU;oCAAS,MAAK;;wCAC9D,wBAAU,6LAAC,oNAAA,CAAA,UAAO;4CAAC,WAAU;;;;;iEAAiC,6LAAC,kNAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;wCAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAQ3G,uBACC,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;0BACZ,cAAA,6LAAC,mIAAA,CAAA,aAAU;;sCACP,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAmB;;;;;;sCACxC,6LAAC,mIAAA,CAAA,kBAAe;sCAAE;;;;;;;;;;;;;;;;;YAK3B,wBACC,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAA+C;;;;;;kCAC7D,6LAAC;wBAAI,WAAU;;0CACV,6LAAC,mIAAA,CAAA,OAAI;;kDACF,6LAAC,mIAAA,CAAA,aAAU;wCAAC,WAAU;;0DAClB,6LAAC,mIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAsB;;;;;;0DAC3C,6LAAC,+MAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;;;;;;;kDAEzB,6LAAC,mIAAA,CAAA,cAAW;kDACR,cAAA,6LAAC;4CAAI,WAAU;sDAAsB,OAAO,YAAY;;;;;;;;;;;;;;;;;0CAGhE,6LAAC,mIAAA,CAAA,OAAI;;kDACD,6LAAC,mIAAA,CAAA,aAAU;wCAAC,WAAU;;0DAClB,6LAAC,mIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAsB;;;;;;0DAC3C,6LAAC,qNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;;;;;;;kDAE1B,6LAAC,mIAAA,CAAA,cAAW;kDACR,cAAA,6LAAC;4CAAI,WAAU;sDAAsB,OAAO,aAAa;;;;;;;;;;;;;;;;;;;;;;;kCAIrE,6LAAC,mIAAA,CAAA,OAAI;;0CACD,6LAAC,mIAAA,CAAA,aAAU;0CACP,cAAA,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;0CAEf,6LAAC,mIAAA,CAAA,cAAW;0CACT,cAAA,6LAAC;oCAAkB,WAAW,OAAO,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;AAOjE;GAlSgB;;QAKD,iKAAA,CAAA,UAAO;;;MALN","debugId":null}}]
}