{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/route-optimizer-form.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Input } from '@/components/ui/input';\nimport { Loader2, Route, Car, Bike, Train, MapPin, Search, Thermometer, Cloudy, Milestone, Clock, Building, Trees, Mountain } from 'lucide-react';\n\nconst destinations = [\n  \"Dassam Falls\", \"Deori Mandir\", \"Betla National Park\", \"Patratu Valley\",\n  \"Jonha Falls\", \"Hundru Falls\", \"Jubilee Park\", \"Baidyanath Dham\",\n  \"Netarhat\", \"Maithon Dam\", \"Parasnath Hills\", \"Ranchi Lake\"\n];\n\nconst formSchema = z.object({\n  selectedDestinations: z.array(z.string()).refine(value => value.length >= 2, {\n    message: \"You must select at least two destinations.\",\n  }),\n  travelMode: z.enum(['Driving', 'Biking', 'Train']),\n  startPoint: z.string().optional(),\n  endPoint: z.string().optional(),\n});\n\nconst nearbyAttractions = [\n    {\n      name: 'Jagannath Temple',\n      description: 'A prominent temple in Ranchi, often called \\'Rath Yatra\\' Temple, similar in architecture to the Puri Jagannath temple.',\n      location: 'Location: Ranchi, near Deori Mandir',\n      icon: Building\n    },\n    {\n      name: 'Rock Garden',\n      description: 'A popular picnic spot and garden carved out of rocks, offering scenic views.',\n      location: 'Location: Ranchi, near Hundru Falls',\n      icon: Trees\n    },\n    {\n      name: 'Kalyaneshwari Temple',\n      description: 'An ancient temple dedicated to Goddess Kalyaneshwari, located very close to Maithon Dam.',\n      location: 'Location: Maithon, near Maithon Dam',\n      icon: Mountain\n    }\n  ];\n\nexport function RouteOptimizerForm() {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<any | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      selectedDestinations: [],\n      travelMode: 'Driving',\n      startPoint: '',\n      endPoint: '',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setLoading(true);\n    setResult(null);\n    setError(null);\n\n    // Simulate AI call\n    setTimeout(() => {\n        const routePoints = [\n            ...(values.startPoint ? [values.startPoint] : []),\n            ...values.selectedDestinations,\n            ...(values.endPoint ? [values.endPoint] : []),\n        ];\n\n        if (routePoints.length < 2) {\n            setError(\"Please provide at least two points (e.g., a start and end point, or two destinations).\");\n            setLoading(false);\n            return;\n        }\n\n        const newOptimizedRoute = routePoints.map((point, index) => {\n            let type = 'Stop';\n            if (index === 0) type = 'Starting Point';\n            if (index === routePoints.length - 1) type = 'Final Destination';\n\n            let leg = null;\n            if (index > 0) {\n                leg = {\n                    road: `Via local roads from ${routePoints[index - 1]}`,\n                    distance: `${Math.floor(Math.random() * 100) + 20} km`,\n                    time: `${Math.floor(Math.random() * 2) + 1}h ${Math.floor(Math.random() * 59)}m`\n                };\n            }\n\n            return {\n                order: index + 1,\n                destination: point,\n                type: type,\n                leg: leg,\n            };\n        });\n\n        const finalResult = {\n            routeDetails: `This optimized route starts from ${newOptimizedRoute[0].destination} and ends at ${newOptimizedRoute[newOptimizedRoute.length - 1].destination}, visiting ${values.selectedDestinations.length} stop(s) in between.`,\n            optimizedRoute: newOptimizedRoute,\n            nearbyAttractions: nearbyAttractions\n        };\n\n        setResult(finalResult);\n        setLoading(false);\n    }, 1500);\n  }\n\n  return (\n    <>\n       <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-bold tracking-tight\">AI Route Optimizer</h1>\n        <p className=\"mt-4 text-lg text-muted-foreground\">Select two or more destinations, and our AI will calculate the most efficient travel path for you.</p>\n      </div>\n\n      {!result && (\n        <Card>\n            <CardHeader>\n            <CardTitle>Build Your Journey</CardTitle>\n            <CardDescription>Select destinations and options to create the perfect route.</CardDescription>\n            </CardHeader>\n            <CardContent>\n            <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n                \n                <FormField\n                    control={form.control}\n                    name=\"selectedDestinations\"\n                    render={() => (\n                    <FormItem>\n                        <div className=\"mb-4\">\n                        <FormLabel className=\"text-base font-semibold\">1. Select Destinations</FormLabel>\n                        <FormDescription>Choose at least two places you want to visit.</FormDescription>\n                        </div>\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                        {destinations.map((item) => (\n                            <FormField\n                            key={item}\n                            control={form.control}\n                            name=\"selectedDestinations\"\n                            render={({ field }) => {\n                                return (\n                                <FormItem\n                                    key={item}\n                                    className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4 transition-colors hover:bg-accent hover:text-accent-foreground\"\n                                >\n                                    <FormControl>\n                                    <Checkbox\n                                        checked={field.value?.includes(item)}\n                                        onCheckedChange={(checked) => {\n                                        return checked\n                                            ? field.onChange([...(field.value || []), item])\n                                            : field.onChange(\n                                                field.value?.filter(\n                                                (value) => value !== item\n                                                )\n                                            )\n                                        }}\n                                    />\n                                    </FormControl>\n                                    <FormLabel className=\"font-normal cursor-pointer w-full\">\n                                    {item}\n                                    </FormLabel>\n                                </FormItem>\n                                )\n                            }}\n                            />\n                        ))}\n                        </div>\n                        <FormMessage />\n                    </FormItem>\n                    )}\n                />\n\n                <FormField\n                    control={form.control}\n                    name=\"travelMode\"\n                    render={({ field }) => (\n                    <FormItem>\n                        <div className=\"mb-4\">\n                            <FormLabel className=\"text-base font-semibold\">2. Choose Travel Mode</FormLabel>\n                        </div>\n                        <FormControl>\n                            <div className=\"grid grid-cols-3 gap-4\">\n                                {(['Driving', 'Biking', 'Train'] as const).map(mode => (\n                                    <Button \n                                        key={mode} \n                                        type=\"button\"\n                                        variant={field.value === mode ? 'default' : 'outline'} \n                                        onClick={() => field.onChange(mode)}\n                                        className=\"py-8 flex flex-col h-auto\"\n                                    >\n                                        {mode === 'Driving' && <Car className=\"h-8 w-8 mb-2\" />}\n                                        {mode === 'Biking' && <Bike className=\"h-8 w-8 mb-2\" />}\n                                        {mode === 'Train' && <Train className=\"h-8 w-8 mb-2\" />}\n                                        {mode}\n                                    </Button>\n                                ))}\n                            </div>\n                        </FormControl>\n                    </FormItem>\n                    )}\n                />\n\n                <div>\n                    <FormLabel className=\"text-base font-semibold\">3. Additional Options</FormLabel>\n                    <div className=\"grid md:grid-cols-2 gap-4 mt-4\">\n                        <FormField\n                            control={form.control}\n                            name=\"startPoint\"\n                            render={({ field }) => (\n                                <FormItem>\n                                <FormLabel className=\"text-sm text-muted-foreground\">Start Point (Optional)</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <MapPin className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"E.g., Ranchi Airport\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                </FormItem>\n                            )}\n                        />\n                        <FormField\n                            control={form.control}\n                            name=\"endPoint\"\n                            render={({ field }) => (\n                                <FormItem>\n                                <FormLabel className=\"text-sm text-muted-foreground\">End Point (Optional)</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <MapPin className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"E.g., Jamshedpur Hotel\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                </FormItem>\n                            )}\n                        />\n                    </div>\n                </div>\n\n                    <div className=\"flex flex-col sm:flex-row gap-4 justify-between items-center pt-4\">\n                        {/* Note: These buttons are disabled as they are placeholders for future features. */}\n                        <div className=\"flex gap-2\">\n                            <Button type=\"button\" variant=\"outline\" size=\"sm\" disabled>\n                                <Search className=\"mr-2 h-4 w-4\" />\n                                Estimate Costs\n                            </Button>\n                            <Button type=\"button\" variant=\"outline\" size=\"sm\" disabled>\n                                <Thermometer className=\"mr-2 h-4 w-4\" />\n                                Get Weather\n                            </Button>\n                            <Button type=\"button\" variant=\"outline\" size=\"sm\" disabled>\n                                <Cloudy className=\"mr-2 h-4 w-4\" />\n                                Analyze Traffic\n                            </Button>\n                        </div>\n                        <Button type=\"submit\" disabled={loading} size=\"lg\" className=\"w-full sm:w-auto\">\n                            {loading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Route className=\"mr-2 h-4 w-4\" />}\n                            Find Optimal Route\n                        </Button>\n                    </div>\n\n                </form>\n            </Form>\n            </CardContent>\n        </Card>\n      )}\n\n      {error && (\n        <Card className=\"mt-8 border-destructive\">\n            <CardHeader>\n                <CardTitle className=\"text-destructive\">Error</CardTitle>\n                <CardDescription>{error}</CardDescription>\n            </CardHeader>\n        </Card>\n      )}\n\n      {result && (\n        <div className=\"mt-12 space-y-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n                <div className=\"lg:col-span-2\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Route Details</CardTitle>\n                            <CardDescription>{result.routeDetails}</CardDescription>\n                        </CardHeader>\n                        <CardContent>\n                             <div className=\"relative pl-8\">\n                                <div className=\"absolute left-[43px] top-5 h-[calc(100%-3rem)] w-0.5 bg-primary/20\" />\n                                {result.optimizedRoute.map((step: any, index: number) => (\n                                    <div key={step.order} className=\"flex items-start gap-6 relative mb-8\">\n                                        <div className=\"z-10 flex h-10 w-10 items-center justify-center rounded-full bg-primary text-primary-foreground font-bold text-lg\">{step.order}</div>\n                                        <div className=\"flex-grow pt-1\">\n                                            <p className=\"font-bold text-lg -mt-1\">{step.destination}</p>\n                                            <p className=\"text-sm text-muted-foreground\">{step.type}</p>\n                                            {step.leg && (\n                                                <div className=\"text-sm text-muted-foreground flex items-center flex-wrap gap-x-4 gap-y-1 mt-2 border rounded-lg p-3 bg-muted/50\">\n                                                    <span className=\"flex items-center gap-1.5\"><Car className=\"h-4 w-4\" />{step.leg.road}</span>\n                                                    <span className=\"flex items-center gap-1.5\"><Milestone className=\"h-4 w-4\" />{step.leg.distance}</span>\n                                                    <span className=\"flex items-center gap-1.5\"><Clock className=\"h-4 w-4\" />{step.leg.time}</span>\n                                                </div>\n                                            )}\n                                            {index === result.optimizedRoute.length - 1 && (\n                                                <p className=\"text-primary font-semibold mt-3\">End of route</p>\n                                            )}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </CardContent>\n                    </Card>\n                </div>\n                \n                <div>\n                    <Card>\n                         <CardHeader>\n                            <CardTitle>What&apos;s Nearby?</CardTitle>\n                            <CardDescription>Bonus stops and hidden gems along your route.</CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                           {result.nearbyAttractions.map((attraction: any) => {\n                                const Icon = attraction.icon;\n                                return (\n                                <div key={attraction.name} className=\"border p-4 rounded-lg hover:bg-accent\">\n                                    <div className=\"flex items-start gap-4\">\n                                        <Icon className=\"h-8 w-8 text-muted-foreground mt-1\" />\n                                        <div>\n                                            <p className=\"font-semibold\">{attraction.name}</p>\n                                            <p className=\"text-sm text-muted-foreground\">{attraction.description}</p>\n                                            <p className=\"text-xs text-muted-foreground/80 mt-2\">{attraction.location}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                           )} )}\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"text-center\">\n                <Button variant=\"outline\" onClick={() => {setResult(null); form.reset();}}>\n                   <Search className=\"mr-2 h-4 w-4\"/> Start a New Search\n                </Button>\n            </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}