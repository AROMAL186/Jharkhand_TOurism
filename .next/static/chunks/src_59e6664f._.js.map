{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,qKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/route-optimizer.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A Genkit flow for optimizing travel routes.\n *\n * - routeOptimizer - A function that generates an optimized travel route.\n * - RouteOptimizerInput - The input type for the routeOptimizer function.\n * - RouteOptimizerOutput - The return type for the routeOptimizer function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst RouteOptimizerInputSchema = z.object({\n  destinations: z.array(z.string()).describe('A list of destination names to include in the route.'),\n  travelMode: z.enum(['DRIVING', 'BIKING', 'TRAIN']).describe('The preferred mode of travel.'),\n  startPoint: z.string().optional().describe('An optional starting point for the journey.'),\n  endPoint: z.string().optional().describe('An optional ending point for the journey.'),\n  estimateCost: z.boolean().describe('Whether to provide a cost estimation.'),\n  getWeather: z.boolean().describe('Whether to provide weather insights.'),\n  analyzeTraffic: z.boolean().describe('Whether to provide real-time traffic analysis.'),\n});\nexport type RouteOptimizerInput = z.infer<typeof RouteOptimizerInputSchema>;\n\nconst StepSchema = z.object({\n  step: z.number().describe('The step number in the sequence.'),\n  location: z.string().describe('The name of the location for this step.'),\n  details: z.string().describe('A brief description of the activity or travel instruction for this step.'),\n  estimatedDuration: z.string().optional().describe('The estimated time to complete this step (e.g., \"2 hours\").'),\n});\n\nconst RouteOptimizerOutputSchema = z.object({\n  title: z.string().describe('A descriptive title for the generated route plan.'),\n  optimizedRoute: z.array(StepSchema).describe('The sequence of steps in the optimized route.'),\n  summary: z.string().describe('A brief summary of the overall trip.'),\n  costEstimation: z.string().optional().describe('An estimated cost for the trip if requested.'),\n  weatherInsights: z.string().optional().describe('Weather information for the route if requested.'),\n  trafficAnalysis: z.string().optional().describe('Traffic analysis for the route if requested.'),\n});\nexport type RouteOptimizerOutput = z.infer<typeof RouteOptimizerOutputSchema>;\n\nexport async function routeOptimizer(input: RouteOptimizerInput): Promise<RouteOptimizerOutput> {\n  return routeOptimizerFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'routeOptimizerPrompt',\n  input: {schema: RouteOptimizerInputSchema},\n  output: {schema: RouteOptimizerOutputSchema},\n  prompt: `You are an expert route planner for Jharkhand tourism. Your task is to generate an optimized travel itinerary based on the user's selections.\n\nUser Inputs:\n- Destinations: {{{json destinations}}}\n- Travel Mode: {{{travelMode}}}\n{{#if startPoint}}- Start Point: {{{startPoint}}}{{/if}}\n{{#if endPoint}}- End Point: {{{endPoint}}}{{/if}}\n\nRequested Information:\n- Cost Estimation: {{#if estimateCost}}Yes{{else}}No{{/if}}\n- Weather Insights: {{#if getWeather}}Yes{{else}}No{{/if}}\n- Traffic Analysis: {{#if analyzeTraffic}}Yes{{else}}No{{/if}}\n\nInstructions:\n1. Create a logical and efficient route that covers all selected destinations. The sequence should minimize travel time and backtracking.\n2. If a start or end point is provided, use it. Otherwise, determine the most logical start/end from the selected destinations.\n3. For each step in the route, provide the location name and clear details.\n4. If requested, provide a cost estimation, weather insights, and/or traffic analysis in the corresponding output fields. Make the information concise and relevant to the trip.\n5. Provide a summary of the trip.\n6. The output must be in a structured format.\n`,\n});\n\nconst routeOptimizerFlow = ai.defineFlow(\n  {\n    name: 'routeOptimizerFlow',\n    inputSchema: RouteOptimizerInputSchema,\n    outputSchema: RouteOptimizerOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAwCsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/route-optimizer-form.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Input } from '@/components/ui/input';\nimport { Switch } from '@/components/ui/switch';\nimport {\n    Loader2, Route, Car, Bike, Train, Clock, Wallet, CloudSun, TrafficCone\n} from 'lucide-react';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { routeOptimizer, RouteOptimizerOutput } from '@/ai/flows/route-optimizer';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\nconst destinations = [\n  \"Dassam Falls\", \n  \"Hundru Falls\", \n  \"Netarhat\", \n  \"Baidyanath Temple\",\n  \"Jonha Falls\", \n  \"Pahari Mandir\",\n  \"Tagore Hill\", \n  \"Parasnath Hill\",\n  \"Betla National Park\",\n  \"Maithon Dam\",\n  \"Bokaro Steel Plant\",\n  \"City Park, Bokaro\",\n  \"Jubilee Park\",\n  \"Dalma Wildlife Sanctuary\",\n  \"Rock Garden & Kanke Dam\",\n  \"Palamu Fort\",\n  \"Lodh Falls\",\n  \"Nagpheni Temple\",\n  \"Deori Mandir\", \n  \"Patratu Valley\",\n  \"Ranchi Lake\"\n];\n\nconst formSchema = z.object({\n  selectedDestinations: z.array(z.string()).refine(value => value.length >= 2, {\n    message: \"Please select at least two destinations.\",\n  }),\n  travelMode: z.enum(['Driving', 'Biking', 'Train']),\n  startPoint: z.string().optional(),\n  endPoint: z.string().optional(),\n  estimateCost: z.boolean(),\n  getWeather: z.boolean(),\n  analyzeTraffic: z.boolean(),\n});\n\nexport function RouteOptimizerForm() {\n  const [loading, setLoading] = useState(false);\n  const [route, setRoute] = useState<RouteOptimizerOutput | null>(null);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      selectedDestinations: [],\n      travelMode: 'Driving',\n      startPoint: '',\n      endPoint: '',\n      estimateCost: false,\n      getWeather: false,\n      analyzeTraffic: false,\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setLoading(true);\n    setRoute(null);\n\n    const aiInput = {\n        destinations: values.selectedDestinations,\n        travelMode: values.travelMode.toUpperCase() as 'DRIVING' | 'BIKING' | 'TRAIN',\n        startPoint: values.startPoint,\n        endPoint: values.endPoint,\n        estimateCost: values.estimateCost,\n        getWeather: values.getWeather,\n        analyzeTraffic: values.analyzeTraffic,\n    };\n\n    try {\n        const result = await routeOptimizer(aiInput);\n        setRoute(result);\n    } catch (error) {\n        console.error(\"Failed to generate route:\", error);\n    }\n\n    setLoading(false);\n  }\n\n  const handleNewTrip = () => {\n    setRoute(null);\n    form.reset();\n  }\n\n  return (\n    <div className=\"grid md:grid-cols-2 gap-8 items-start\">\n      <div className=\"bg-card p-6 rounded-lg border\">\n        <h2 className=\"text-xl font-bold mb-1\">Plan Your Trip</h2>\n        <p className=\"text-muted-foreground mb-6\">Select your destinations and preferences.</p>\n        \n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n            <FormField\n              control={form.control}\n              name=\"selectedDestinations\"\n              render={() => (\n                <FormItem>\n                  <FormLabel className=\"font-semibold\">Destinations</FormLabel>\n                  <FormDescription>Select at least two places to visit.</FormDescription>\n                  <ScrollArea className=\"h-48 mt-2 border rounded-md p-4\">\n                    <div className=\"space-y-2\">\n                    {destinations.sort().map((item) => (\n                      <FormField\n                        key={item}\n                        control={form.control}\n                        name=\"selectedDestinations\"\n                        render={({ field }) => (\n                          <FormItem className=\"flex flex-row items-center space-x-3 space-y-0\">\n                            <FormControl>\n                              <Checkbox\n                                checked={field.value?.includes(item)}\n                                onCheckedChange={(checked) => {\n                                  return checked\n                                    ? field.onChange([...(field.value || []), item])\n                                    : field.onChange(\n                                        field.value?.filter((value) => value !== item)\n                                      );\n                                }}\n                              />\n                            </FormControl>\n                            <FormLabel className=\"font-normal w-full cursor-pointer\">{item}</FormLabel>\n                          </FormItem>\n                        )}\n                      />\n                    ))}\n                    </div>\n                  </ScrollArea>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"travelMode\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"font-semibold\">Travel Mode</FormLabel>\n                  <FormControl>\n                    <div className=\"grid grid-cols-3 gap-2 mt-2\">\n                      {(['Driving', 'Biking', 'Train'] as const).map(mode => (\n                        <Button \n                          key={mode} \n                          type=\"button\"\n                          variant={field.value === mode ? 'default' : 'outline'} \n                          onClick={() => field.onChange(mode)}\n                          className=\"flex items-center justify-center gap-2\"\n                        >\n                          {mode === 'Driving' && <Car className=\"h-4 w-4\" />}\n                          {mode === 'Biking' && <Bike className=\"h-4 w-4\" />}\n                          {mode === 'Train' && <Train className=\"h-4 w-4\" />}\n                          {mode}\n                        </Button>\n                      ))}\n                    </div>\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n\n            <div>\n              <FormLabel className=\"font-semibold\">Start & End Points (Optional)</FormLabel>\n              <div className=\"grid md:grid-cols-2 gap-4 mt-2\">\n                <FormField\n                  control={form.control}\n                  name=\"startPoint\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormControl>\n                        <Input placeholder=\"Start Point\" {...field} />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"endPoint\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormControl>\n                        <Input placeholder=\"End Point\" {...field} />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n              </div>\n            </div>\n\n             <div>\n                <FormLabel className=\"font-semibold\">Additional Information</FormLabel>\n                 <div className=\"space-y-4 mt-2 rounded-md border p-4\">\n                    <FormField\n                        control={form.control}\n                        name=\"estimateCost\"\n                        render={({ field }) => (\n                            <FormItem className=\"flex flex-row items-center justify-between\">\n                                <div className=\"space-y-0.5\">\n                                    <FormLabel>Cost Estimation</FormLabel>\n                                </div>\n                                <FormControl>\n                                    <Switch checked={field.value} onCheckedChange={field.onChange} />\n                                </FormControl>\n                            </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={form.control}\n                        name=\"getWeather\"\n                        render={({ field }) => (\n                            <FormItem className=\"flex flex-row items-center justify-between\">\n                                <div className=\"space-y-0.5\">\n                                    <FormLabel>Weather Insights</FormLabel>\n                                </div>\n                                <FormControl>\n                                    <Switch checked={field.value} onCheckedChange={field.onChange} />\n                                </FormControl>\n                            </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={form.control}\n                        name=\"analyzeTraffic\"\n                        render={({ field }) => (\n                            <FormItem className=\"flex flex-row items-center justify-between\">\n                                <div className=\"space-y-0.5\">\n                                    <FormLabel>Traffic Analysis</FormLabel>\n                                </div>\n                                <FormControl>\n                                    <Switch checked={field.value} onCheckedChange={field.onChange} />\n                                </FormControl>\n                            </FormItem>\n                        )}\n                    />\n                </div>\n            </div>\n            \n            <Button type=\"submit\" disabled={loading || form.getValues(\"selectedDestinations\").length < 2} size=\"lg\" className=\"w-full\">\n              {loading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n              Generate Optimized Route\n            </Button>\n          </form>\n        </Form>\n      </div>\n\n      <div className=\"bg-card p-6 rounded-lg border h-full flex flex-col\">\n        {!loading && route ? (\n          <div className=\"flex flex-col h-full\">\n            <h2 className=\"text-xl font-bold mb-2\">{route.title}</h2>\n            <p className=\"text-muted-foreground mb-6\">{route.summary}</p>\n            \n            <ScrollArea className=\"flex-grow mb-6\">\n                <div className=\"relative pl-8 space-y-8 py-2\">\n                  <div className=\"absolute left-[19px] top-2 h-full w-0.5 bg-primary/20\" />\n                  {route.optimizedRoute.map((step, index) => (\n                      <div key={index} className=\"flex items-start gap-6 relative\">\n                        <div className=\"z-10 flex h-10 w-10 items-center justify-center rounded-full bg-primary text-primary-foreground font-bold text-lg\">{step.step}</div>\n                        <div className=\"flex-grow pt-1\">\n                          <h3 className=\"font-bold text-md\">{step.location}</h3>\n                          <p className=\"text-sm text-muted-foreground mt-1\">{step.details}</p>\n                          {step.estimatedDuration && (\n                            <div className=\"text-xs text-muted-foreground flex items-center gap-1.5 mt-2\">\n                              <Clock className=\"h-3 w-3\" />\n                              <span>{step.estimatedDuration}</span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                  ))}\n                </div>\n            </ScrollArea>\n\n            <div className=\"grid grid-cols-1 gap-4\">\n                {route.costEstimation && (\n                    <Card>\n                        <CardHeader className=\"flex flex-row items-center gap-2 space-y-0\">\n                            <Wallet className=\"h-5 w-5 text-primary\" />\n                            <CardTitle className=\"text-lg\">Cost</CardTitle>\n                        </CardHeader>\n                        <CardContent><p className=\"text-sm text-muted-foreground\">{route.costEstimation}</p></CardContent>\n                    </Card>\n                )}\n                {route.weatherInsights && (\n                    <Card>\n                        <CardHeader className=\"flex flex-row items-center gap-2 space-y-0\">\n                            <CloudSun className=\"h-5 w-5 text-primary\" />\n                            <CardTitle className=\"text-lg\">Weather</CardTitle>\n                        </CardHeader>\n                        <CardContent><p className=\"text-sm text-muted-foreground\">{route.weatherInsights}</p></CardContent>\n                    </Card>\n                )}\n                {route.trafficAnalysis && (\n                     <Card>\n                        <CardHeader className=\"flex flex-row items-center gap-2 space-y-0\">\n                            <TrafficCone className=\"h-5 w-5 text-primary\" />\n                            <CardTitle className=\"text-lg\">Traffic</CardTitle>\n                        </CardHeader>\n                        <CardContent><p className=\"text-sm text-muted-foreground\">{route.trafficAnalysis}</p></CardContent>\n                    </Card>\n                )}\n            </div>\n\n             <Button variant=\"outline\" onClick={handleNewTrip} className=\"mt-8 w-full\">\n                Plan a New Trip\n            </Button>\n          </div>\n        ) : (\n          <div className=\"flex flex-col items-center justify-center h-full text-center text-muted-foreground\">\n            {loading ? <Loader2 className=\"h-12 w-12 text-primary animate-spin\" /> : <Route className=\"h-16 w-16 text-muted-foreground/30 mb-4\" />}\n            <h3 className=\"text-xl font-bold text-foreground mt-4\">Your Optimized Route Will Appear Here</h3>\n            <p className=\"max-w-xs mx-auto\">Select your destinations and click generate to see your plan.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}