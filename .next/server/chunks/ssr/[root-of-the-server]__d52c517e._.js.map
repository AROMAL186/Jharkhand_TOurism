{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/route-optimizer.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A Genkit flow for optimizing travel routes.\n *\n * - routeOptimizer - A function that generates an optimized travel route.\n * - RouteOptimizerInput - The input type for the routeOptimizer function.\n * - RouteOptimizerOutput - The return type for the routeOptimizer function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst RouteOptimizerInputSchema = z.object({\n  destinations: z.array(z.string()).describe('A list of destination names to include in the route.'),\n  travelMode: z.enum(['DRIVING', 'BIKING', 'TRAIN']).describe('The preferred mode of travel.'),\n  startPoint: z.string().optional().describe('An optional starting point for the journey.'),\n  endPoint: z.string().optional().describe('An optional ending point for the journey.'),\n  estimateCost: z.boolean().describe('Whether to provide a cost estimation.'),\n  getWeather: z.boolean().describe('Whether to provide weather insights.'),\n  analyzeTraffic: z.boolean().describe('Whether to provide real-time traffic analysis.'),\n});\nexport type RouteOptimizerInput = z.infer<typeof RouteOptimizerInputSchema>;\n\nconst StepSchema = z.object({\n  step: z.number().describe('The step number in the sequence.'),\n  location: z.string().describe('The name of the location for this step.'),\n  details: z.string().describe('A brief description of the activity or travel instruction for this step.'),\n  estimatedDuration: z.string().optional().describe('The estimated time to complete this step (e.g., \"2 hours\").'),\n});\n\nconst RouteOptimizerOutputSchema = z.object({\n  title: z.string().describe('A descriptive title for the generated route plan.'),\n  optimizedRoute: z.array(StepSchema).describe('The sequence of steps in the optimized route.'),\n  summary: z.string().describe('A brief summary of the overall trip.'),\n  costEstimation: z.string().optional().describe('An estimated cost for the trip if requested.'),\n  weatherInsights: z.string().optional().describe('Weather information for the route if requested.'),\n  trafficAnalysis: z.string().optional().describe('Traffic analysis for the route if requested.'),\n});\nexport type RouteOptimizerOutput = z.infer<typeof RouteOptimizerOutputSchema>;\n\nexport async function routeOptimizer(input: RouteOptimizerInput): Promise<RouteOptimizerOutput> {\n  return routeOptimizerFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'routeOptimizerPrompt',\n  input: {schema: RouteOptimizerInputSchema},\n  output: {schema: RouteOptimizerOutputSchema},\n  prompt: `You are an expert route planner for Jharkhand tourism. Your task is to generate an optimized travel itinerary based on the user's selections.\n\nUser Inputs:\n- Destinations: {{{json destinations}}}\n- Travel Mode: {{{travelMode}}}\n{{#if startPoint}}- Start Point: {{{startPoint}}}{{/if}}\n{{#if endPoint}}- End Point: {{{endPoint}}}{{/if}}\n\nRequested Information:\n- Cost Estimation: {{#if estimateCost}}Yes{{else}}No{{/if}}\n- Weather Insights: {{#if getWeather}}Yes{{else}}No{{/if}}\n- Traffic Analysis: {{#if analyzeTraffic}}Yes{{else}}No{{/if}}\n\nInstructions:\n1. Create a logical and efficient route that covers all selected destinations. The sequence should minimize travel time and backtracking.\n2. If a start or end point is provided, use it. Otherwise, determine the most logical start/end from the selected destinations.\n3. For each step in the route, provide the location name and clear details.\n4. If requested, provide a cost estimation, weather insights, and/or traffic analysis in the corresponding output fields. Make the information concise and relevant to the trip.\n5. Provide a summary of the trip.\n6. The output must be in a structured format.\n`,\n});\n\nconst routeOptimizerFlow = ai.defineFlow(\n  {\n    name: 'routeOptimizerFlow',\n    inputSchema: RouteOptimizerInputSchema,\n    outputSchema: RouteOptimizerOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAC3C,YAAY,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAW;QAAU;KAAQ,EAAE,QAAQ,CAAC;IAC5D,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC3C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACzC,cAAc,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,CAAC;IACnC,YAAY,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,CAAC;IACjC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,CAAC;AACvC;AAGA,MAAM,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACpD;AAEA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,YAAY,QAAQ,CAAC;IAC7C,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC/C,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAChD,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAClD;AAGO,eAAe,eAAe,KAA0B;IAC7D,OAAO,mBAAmB;AAC5B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAyB;IACzC,QAAQ;QAAC,QAAQ;IAA0B;IAC3C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;AAoBX,CAAC;AACD;AAEA,MAAM,qBAAqB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACtC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28main%29/route-optimizer/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {routeOptimizer as '40ad88fb108386a33c151ba11913e2f037d56df981'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/route-optimizer-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RouteOptimizerForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call RouteOptimizerForm() from the server but RouteOptimizerForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/route-optimizer-form.tsx <module evaluation>\",\n    \"RouteOptimizerForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yEACA","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/route-optimizer-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RouteOptimizerForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call RouteOptimizerForm() from the server but RouteOptimizerForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/route-optimizer-form.tsx\",\n    \"RouteOptimizerForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qDACA","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/route-optimizer/page.tsx"],"sourcesContent":["import { RouteOptimizerForm } from '@/components/route-optimizer-form';\n\nexport default function RouteOptimizerPage() {\n  return (\n    <div className=\"container mx-auto max-w-6xl py-8\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-bold tracking-tight\">Route Optimizer</h1>\n        <p className=\"mt-2 text-lg text-muted-foreground\">Plan the most efficient route for your Jharkhand adventure.</p>\n      </div>\n      <RouteOptimizerForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;0BAEpD,8OAAC,gJAAA,CAAA,qBAAkB;;;;;;;;;;;AAGzB","debugId":null}}]
}