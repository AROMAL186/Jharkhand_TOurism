{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/route-optimizer.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Optimizes a travel route between multiple destinations in Jharkhand.\n *\n * - optimizeRoute - A function that calculates the most efficient route.\n * - RouteOptimizerInput - The input type for the optimizeRoute function.\n * - RouteOptimizerOutput - The return type for the optimizeRoute function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst RouteOptimizerInputSchema = z.object({\n  destinations: z\n    .array(z.string())\n    .describe('An array of destination names to be included in the route.'),\n  optimizationMode: z\n    .enum(['fastest', 'shortest'])\n    .describe('The mode for optimization, either \"fastest\" time or \"shortest\" distance.'),\n});\nexport type RouteOptimizerInput = z.infer<typeof RouteOptimizerInputSchema>;\n\nconst RouteStepSchema = z.object({\n    order: z.number().describe(\"The step number in the optimized route.\"),\n    destination: z.string().describe(\"The name of the destination for this step.\"),\n    estimatedTime: z.string().describe(\"Estimated travel time from the previous destination.\"),\n    estimatedDistance: z.string().describe(\"Estimated travel distance from the previous destination.\"),\n});\n\nconst RouteOptimizerOutputSchema = z.object({\n  optimizedRoute: z\n    .array(RouteStepSchema)\n    .describe('The optimized route as an ordered list of destinations.'),\n  totalEstimatedTime: z.string().describe('The total estimated travel time for the entire route.'),\n  totalEstimatedDistance: z.string().describe('The total estimated distance for the entire route.'),\n  optimizationSummary: z\n    .string()\n    .describe('A brief summary explaining the rationale behind the optimized route.'),\n});\nexport type RouteOptimizerOutput = z.infer<typeof RouteOptimizerOutputSchema>;\n\nexport async function optimizeRoute(input: RouteOptimizerInput): Promise<RouteOptimizerOutput> {\n  return routeOptimizerFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'routeOptimizerPrompt',\n  input: {schema: RouteOptimizerInputSchema},\n  output: {schema: RouteOptimizerOutputSchema},\n  prompt: `You are a route optimization expert for Jharkhand, India. Your task is to create the most efficient travel route for a tourist.\n\n  Given the following destinations:\n  {{#each destinations}}\n  - {{{this}}}\n  {{/each}}\n\n  And the desired optimization mode: {{{optimizationMode}}}\n\n  Calculate the optimal order of destinations to visit. The route must start from the first destination in the provided list.\n  For each step in the route, provide the destination name, the estimated travel time, and distance from the previous stop. For the first destination, the time and distance should be 0.\n  Provide the total estimated time and distance for the entire trip.\n  Also, provide a brief summary explaining why this route is the most efficient based on the chosen optimization mode.\n  \n  Assume standard road travel conditions within Jharkhand. Use realistic travel times and distances between the locations.`,\n});\n\nconst routeOptimizerFlow = ai.defineFlow(\n  {\n    name: 'routeOptimizerFlow',\n    inputSchema: RouteOptimizerInputSchema,\n    outputSchema: RouteOptimizerOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,cAAc,uIAAA,CAAA,IAAC,CACZ,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,kBAAkB,uIAAA,CAAA,IAAC,CAChB,IAAI,CAAC;QAAC;QAAW;KAAW,EAC5B,QAAQ,CAAC;AACd;AAGA,MAAM,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC3C;AAEA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,gBAAgB,uIAAA,CAAA,IAAC,CACd,KAAK,CAAC,iBACN,QAAQ,CAAC;IACZ,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxC,wBAAwB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5C,qBAAqB,uIAAA,CAAA,IAAC,CACnB,MAAM,GACN,QAAQ,CAAC;AACd;AAGO,eAAe,cAAc,KAA0B;IAC5D,OAAO,mBAAmB;AAC5B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAyB;IACzC,QAAQ;QAAC,QAAQ;IAA0B;IAC3C,QAAQ,CAAC;;;;;;;;;;;;;;0HAc+G,CAAC;AAC3H;AAEA,MAAM,qBAAqB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACtC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28main%29/route-optimizer/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {optimizeRoute as '40f6ba81783300763423f42f96398d816a4494b098'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/route-optimizer-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RouteOptimizerForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call RouteOptimizerForm() from the server but RouteOptimizerForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/route-optimizer-form.tsx <module evaluation>\",\n    \"RouteOptimizerForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yEACA","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/route-optimizer-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RouteOptimizerForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call RouteOptimizerForm() from the server but RouteOptimizerForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/route-optimizer-form.tsx\",\n    \"RouteOptimizerForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qDACA","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/route-optimizer/page.tsx"],"sourcesContent":["\nimport { RouteOptimizerForm } from '@/components/route-optimizer-form';\nimport { Card, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Map } from 'lucide-react';\n\nexport default function RouteOptimizerPage() {\n  return (\n    <div className=\"container mx-auto max-w-4xl\">\n      <Card className=\"border-none shadow-none\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto bg-primary/10 p-3 rounded-full w-fit mb-4\">\n             <Map className=\"h-8 w-8 text-primary\" />\n          </div>\n          <CardTitle className=\"text-3xl font-headline font-bold\">Route Optimizer</CardTitle>\n          <CardDescription className=\"text-lg\">\n            Find the most efficient path between your chosen destinations in Jharkhand.\n          </CardDescription>\n        </CardHeader>\n      </Card>\n      <RouteOptimizerForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;0BACd,cAAA,8OAAC,gIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,8OAAC;4BAAI,WAAU;sCACZ,cAAA,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;;;;;;sCAElB,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAmC;;;;;;sCACxD,8OAAC,gIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAKzC,8OAAC,gJAAA,CAAA,qBAAkB;;;;;;;;;;;AAGzB","debugId":null}}]
}